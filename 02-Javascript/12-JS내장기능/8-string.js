//문자열 처리
/*
문자열은 그 자체가 객체
=>객체라는것은 그안에 멤버변수(프로퍼티)와 메서드(함수)가 내장되어 있음을 의미
-일반적으로 생성하는 문자열 변수 안에는 메서드와 프로퍼티가 자동으로 내장
    const foo="Hello World";
    foo.메서드()
문자열 객체에 내장된 메서드들은 변수가 담고있는 내용을 가공하거나 특정 내용을 추출하는 기능을 갖음
이 기능들의 공통점: 원본내용은 절대 변하지 않고, 가공 결과를 리턴
*/

const str1= "Hello world";
console.log(str1);

//객체 생성 방식으로 문자열 만들기(정석)
const str2= new String("Hello JS");
console.log(str2);

//기능확인을 위한 문자열 선언
const msg= "Life is too short, You need Javascript.";
console.log("문자열 :"+ msg);

//문자열 글자수를 가져옴.공백과 특수문자 포함
const len= msg.length;
console.log("문자열의 길이 :"+ len);

//파라미터로 설정된 위치의 글자 리턴(0부터 카운트)
const str1nd= msg.charAt(2);
console.log("두번째 글자: "+ str1nd);
//문자열은 그자체로 배열처럼 취급 가능
console.log("두번째 글자: "+ msg[2]);

//파라미터로 전달된 내용이 처음 나타나는 위치 리턴

//찾지못할 경우 -1리턴

//단어나 문장으로 검색할 경우 일치하는 내용이 시작되는 첫 글자의 위치 반환

//indexOf파라미터가 두개인경우, 두번째 숫자값은 첫번째 파라미터의 글자를 찾는 시작위치를 의미


/*파라미터로 전달된 글자가 마지막으로 나타나는 위치를 리턴
단,문자열의 처음부터 센다(끝부터x) 
찾지못할 경우 -1을 반환*/

//응용

